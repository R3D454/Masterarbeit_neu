// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#define Model_Equipment_BODY

/************************************************************
 Equipment class body
 ************************************************************/

// include associated header file
#include "Model/Equipment.h"

// Derived includes directives


namespace Model {

// static attributes (if any)

/**
 *
 * @param Name
 */
Equipment::Equipment(std::string /*in*/n) {
  Name=n;
}

/**
 *
 * @param name
 */
void Equipment::setName(std::string /*in*/n) {
  Name = n;
}

/**
 *
 * @return
 */
std::string Equipment::getName() {
return Name;
}

/**
 *
 * @return Name
 */
// std::list Equipment::getWeapon() {
// }

/**
 *
 * @param w
 */
void Equipment::addWeapon(weapon* /*in*/w) {
  weaponList.push_back(w);
}

/**
 *
 * @param s
 */
void Equipment::addSensor(sensor* /*in*/s) {
  sensorList.push_back(s);
}
/**
 *
 */
void Equipment::printInfo() {
  std::cout<< "Equipment Name:" <<Name <<std::endl;
	for(std::list<weapon*>::iterator it=weaponList.begin(); it != weaponList.end(); ++it)
		{
			(*it)->printInfo();
			//std::cout<<" "<<std::endl;
		}
}

} // of namespace Model

/************************************************************
 End of Equipment class body
 ************************************************************/
