// --------------------------------------------------------
// Code generated by Papyrus C++
// --------------------------------------------------------

#ifndef MODEL_OBJECT_H
#define MODEL_OBJECT_H

/************************************************************
 object class header
 ************************************************************/

#include "Model/Pkg_Model.h"

#include "AnsiCLibrary/Pkg_AnsiCLibrary.h"
#include "EcorePrimitiveTypes/Pkg_EcorePrimitiveTypes.h"
#include "string"
#include "externeFunktionen/pos_convert.h"


namespace Model {
class Equipment;
}

namespace Model {

/************************************************************/
/**
 *
 */
class object {
public:

	/**
	 *
	 * @param name
	 */
	void setName(std::string /*in*/name);

	/**
	 *
	 * @return
	 */
	std::string getName();

	/**
	 *
	 * @return
	 */
	void generateEntityID();

	/**
	 *
	 * @param name
	 */
	void setCountry(std::string /*in*/name);

	/**
	 *
	 * @return
	 */
	std::string getCountry();

	/**
	 *
	 * @param number
	 */
	void setProtocolVersion(int /*in*/number);

	/**
	 *
	 * @return
	 */
	int getProtocolVersion();

	/**
	 *
	 * @param name
	 */
	void SetDomain(std::string /*in*/name);

	/**
	 *
	 * @return
	 */
	std::string getDomain();

	/**
	 *
	 * @param pos
	 */
	void setPosition(double lat,double lon,double hight);

	/**
	 *
	 * @return position
	 */
	position_dec getPosition();

	/**
	 *
	 * @param value
	 */
	void setKind(std::string /*in*/k);

	/**
	 *
	 * @return value
	 */
	std::string getkind();
	/**
	 *
	 *
	 */

	 // virtual void  printInfo();
	/**
	 *
	 * @param location
	 * @param orientation
	 * @param equipment
	 * @param category
	 * @param subCategory
	 */

	 struct DIS_EntityType_Variables{
		 int Kind;
		 int Domain;
		 int Country;
		 int Category;
		 int SubCategory;
		 int Sprecific;
		 int Extra;
	 };
	// void convertToDIS(undefined /*in*/location, undefined /*in*/orientation,
	// 		Equipment /*in*/equipment, int /*in*/category,
	// 		int /*in*/subCategory);

private:
	/**
	 *
	 */
	std::string Name;
	/**
	 *
	 */
	std::string Country;
	/**
	 *
	 */
	int ProtocolVersion;
	/**
	 *
	 */
	std::string Domain;
	/**
	 *
	 */
	position_dec Position;
	/**
	 *
	 */
	std::string Kind;

	DIS_EntityType_Variables DIS_EntityType;
};
/************************************************************/
/* External declarations (package visibility)               */
/************************************************************/

/* Inline functions                                         */

} // of namespace Model

/************************************************************
 End of object class header
 ************************************************************/

#endif
